@model InternProject.CsvFileConverter.Library.Extensions.Mapping.DealData

@{
    ViewData["Title"] = "Create";
}

<div class="form-body">
    @using (Html.BeginForm())
    {
        <div class=" form-group">
            @Html.LabelFor(model => model.V3DealId)
            @Html.EditorFor(model => model.V3DealId)
            @Html.ValidationMessageFor(model => model.V3DealId)
        </div>
        <div class=" form-group">
            @Html.LabelFor(model => model.DealName)
            @Html.EditorFor(model => model.DealName)
            @Html.ValidationMessageFor(model => model.DealName)
        </div>
        <div class=" form-group">
            @Html.LabelFor(model => model.EFrontDealId)
            @Html.EditorFor(model => model.EFrontDealId)
            @Html.ValidationMessageFor(model => model.EFrontDealId)
        </div>
        <div class=" form-group">
            @Html.LabelFor(model => model.V3CompanyId)
            @Html.EditorFor(model => model.V3CompanyId)
            @Html.ValidationMessageFor(model => model.V3CompanyId)
        </div>
        <div class=" form-group">
            @Html.LabelFor(model => model.V3CompanyName)
            @Html.EditorFor(model => model.V3CompanyName)
            @Html.ValidationMessageFor(model => model.V3CompanyName)
        </div>
        <div class=" form-group">
            @Html.LabelFor(model => model.SectorId)
            @Html.EditorFor(model => model.SectorId)
            @Html.ValidationMessageFor(model => model.SectorId)
        </div>
        <div class=" form-group">
            @Html.LabelFor(model => model.Sector)
            @Html.EditorFor(model => model.Sector)
            @Html.ValidationMessageFor(model => model.Sector)
        </div>
        <div class=" form-group">
            @Html.LabelFor(model => model.CountryId)
            @Html.EditorFor(model => model.CountryId)
            @Html.ValidationMessageFor(model => model.CountryId)
        </div>
        <div class=" form-group">
            @Html.LabelFor(model => model.Country)
            @Html.EditorFor(model => model.Country)
            @Html.ValidationMessageFor(model => model.Country)
        </div>
        <div class=" form-group">
            @Html.LabelFor(model => model.TransactionTypeId)
            @Html.EditorFor(model => model.TransactionTypeId)
            @Html.ValidationMessageFor(model => model.TransactionTypeId)
        </div>
        <div class=" form-group">
            @Html.LabelFor(model => model.TransactionType)
            @Html.EditorFor(model => model.TransactionType)
            @Html.ValidationMessageFor(model => model.TransactionType)
        </div>
        <div class=" form-group">
            @Html.LabelFor(model => model.TransactionFees)
            @Html.EditorFor(model => model.TransactionFees)
            @Html.ValidationMessageFor(model => model.TransactionFees)
        </div>
        <div class=" form-group">
            @Html.LabelFor(model => model.OtherFees)
            @Html.EditorFor(model => model.OtherFees)
            @Html.ValidationMessageFor(model => model.OtherFees)
        </div>
        <div class=" form-group">
            @Html.LabelFor(model => model.Currency)
            @Html.EditorFor(model => model.Currency)
            @Html.ValidationMessageFor(model => model.Currency)
        </div>
        <div class=" form-group">
            @Html.LabelFor(model => model.ActiveInActive)
            @Html.EditorFor(model => model.ActiveInActive)
            @Html.ValidationMessageFor(model => model.ActiveInActive)
        </div>
        <div class=" form-group">
            @Html.LabelFor(model => model.ExitDate)
            @Html.EditorFor(model => model.ExitDate)
            @Html.ValidationMessageFor(model => model.ExitDate)
        </div>
        <div class="form-group">
            <input type="submit" value="Submit" class="btn btn-default"/>
            <input type="reset" value="Reset" class="btn btn-default"/>
        </div>
    }
</div>